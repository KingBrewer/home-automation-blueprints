blueprint:
  name: Simple TRV External Temperature Sync
  description: >-
    Updates a TRV's external temperature from a sensor every time the sensor's value changes.
  domain: automation
  input:
    trv_climate_entity:
      name: Sonoff TRV
      description: The climate entity of the Sonoff TRV.
      selector:
        entity:
          domain: climate
    temperature_sensor:
      name: External Temperature Sensor
      description: The sensor entity that provides the room temperature.
      selector:
        entity:
          domain: sensor
          device_class: temperature

trigger:
  - platform: state
    entity_id: !input temperature_sensor
    not_from:
      - "unavailable"
      - "unknown"
    not_to:
      - "unavailable"
      - "unknown"

action:
  - variables:
      # Get the object_id from the selected climate entity.
      # The object_id is the part of the entity_id after the "climate."
      trv_object_id: "{{ states[(!input trv_climate_entity)].object_id }}"

      # Construct the full entity_id for the number entity we want to update.
      target_number_entity: "number.{{ trv_object_id }}_external_temperature_sensor"

  - service: number.set_value
    target:
      entity_id: "{{ target_number_entity }}"
    data:
      value: "{{ trigger.to_state.state | float }}"

  - service: logbook.log
    data:
      name: "{{ state_attr(!input trv_climate_entity, 'friendly_name') }} Temperature Sync"
      message: "Set external temperature on {{ target_number_entity }} to {{ trigger.to_state.state }}Â°C."
      entity_id: !input trv_climate_entity

mode: single
